package com.example.mewnfo.data.remote.model

import com.example.mewnfo.domain.model.Cat as DomainCat

data class Cat(
    val weight: Weight,
    val id: String,
    val name: String,
    val cfaUrl: String? = null,
    val vetstreetUrl: String? = null,
    val vcahospitalsUrl: String? = null,
    val temperament: String,
    val origin: String,
    val countryCodes: String,
    val countryCode: String,
    val description: String,
    val lifeSpan: String,
    val indoor: Int,
    val lap: Int? = null,
    val altNames: String,
    val adaptability: Int,
    val affectionLevel: Int,
    val childFriendly: Int,
    val dogFriendly: Int,
    val energyLevel: Int,
    val grooming: Int,
    val healthIssues: Int,
    val intelligence: Int,
    val sheddingLevel: Int,
    val socialNeeds: Int,
    val strangerFriendly: Int,
    val vocalisation: Int,
    val experimental: Int,
    val hairless: Int,
    val natural: Int,
    val rare: Int,
    val rex: Int,
    val suppressedTail: Int,
    val shortLegs: Int,
    val wikipediaUrl: String,
    val hypoallergenic: Int,
    val referenceImageId: String,
    val image: Image? = null
) {
    fun toDomain(): DomainCat {
        return DomainCat(
            name = name,
            weight = weight.metric,
            vetstreetUrl = vetstreetUrl,
            vcahospitalsUrl = vcahospitalsUrl,
            temperament = temperament,
            origin = origin,
            countryCodes = countryCodes,
            countryCode = countryCode,
            description = description,
            lifeSpan = lifeSpan,
            indoor = indoor,
            lap = lap,
            altNames = altNames,
            adaptability = adaptability,
            affectionLevel = affectionLevel,
            childFriendly = childFriendly,
            dogFriendly = dogFriendly,
            energyLevel = energyLevel,
            grooming = grooming,
            healthIssues = healthIssues,
            intelligence = intelligence,
            sheddingLevel = sheddingLevel,
            socialNeeds = socialNeeds,
            strangerFriendly = strangerFriendly,
            vocalisation = vocalisation,
            experimental = experimental,
            hairless = hairless,
            natural = natural,
            rare = rare,
            rex = rex,
            suppressedTail = suppressedTail,
            shortLegs = shortLegs,
            wikipediaUrl = wikipediaUrl,
            hypoallergenic = hypoallergenic,
            imageUrl = image?.url,
        )
    }
}